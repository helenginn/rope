
unit_tests = [
'atom_cannot_have_negative_occupancy',
'atom_code_converts_to_upper_case',
'atom_derived_should_immediately_match_initial_placement',
'atom_element_converts_to_upper_case',
'atom_element_throws_exception_if_null',
'atom_element_throws_exception_if_number',
'atom_element_trims_whitespace',
'atomgroup_adds_single_atom',
'atomgroup_can_find_added_atom',
'atomgroup_can_remove_existing_atom',
'atomgroup_cannot_remove_non_member_atom',
'atomgroup_does_not_add_atom_twice',
'atomgroup_does_not_add_identical_bondstraints',
'bondangles_with_common_atoms_form_torsions',
'bondangle_adds_self_to_atomgroup',
'bondangle_and_permuted_bondangle_are_not_identical',
'bondangle_and_reversed_bondangle_are_identical',
'bondangle_correctly_describes_itself',
'bondangle_does_not_accept_null_initialisation',
'bond_aligned_matrix_a_vector_along_z_axis',
'bond_aligned_matrix_handles_angles_adding_up_to_360',
'bond_aligned_matrix_lines_up_with_unit_cell',
'bondcalculator_must_specify_pipeline',
'bondcalculator_must_use_non_zero_positive_threads',
'bondcalculator_returns_limited_mask_on_depth_limits',
'bondlength_added_also_increments_bondstraint',
'bondlength_adds_reference_to_atom',
'bondlength_adds_self_to_atomgroup',
'bondlength_and_reversed_bondlength_are_identical',
'bondlength_does_not_accept_null_initialisation',
'bondlength_does_not_add_atom_outside_atomgroup',
'bondlength_provides_correct_description',
'bondlength_returns_expected_value_for_measurement',
'bondlength_returns_partner_for_queried_atom',
'bondlength_throws_exception_if_queried_atom_not_member',
'bonds_uses_torsion_angle_for_three_rhombohedral_centres',
'bonds_uses_torsion_angle_for_two_rhombohedral_centres',
'bonds_uses_torsion_angle_for_two_rhombohedral_one_planar_centres',
'bondtorsion_and_reversed_bondtorsion_are_identical',
'bondtorsion_similarity_for_half_max_separated_torsions_is_half',
'bondtorsion_similarity_for_torsions_separated_by_60_degrees_is_half',
'bondtorsion_correctly_describes_itself',
'bondtorsion_similarity_for_identical_is_one',
'bondtorsion_similarity_for_vertically_separated_torsions_is_one',
'bondtorsion_similarity_beyond_max_separation_is_zero',
'torsionbasis_adds_torsion_angles',
'chiralcentres_return_assigned_chirality_for_atoms',
'chiralities_match_permutations_of_noncentre_components',
'chirality_correctly_returns_description',
'cif2geometry_transfers_atom_ownership',
'cif2geometry_transfers_table_ownership',
'concertedbasis_returns_number_of_active_bonds',
'diffraction_created_from_reflist',
'diffraction_gets_amplitude_from_reflist',
'diffraction_friedel_pairs_are_instantiated',
'elementsegment_can_populate_plan',
'elementsegment_can_fourier_transform',
'elementsegment_splits_density_over_voxels',
'geometrytable_angle_lookup_returns_value',
'geometrytable_torsion_lookup_returns_value',
'grid_identifies_outside_bounds_over_zero',
'grid_identifies_within_bounds_under_zero',
'grid_set_elements_positive',
'grid_returns_total_voxel_dimensions',
'hasbondstraints_returns_bond_length_with_specified_atoms',
'hasbondstraints_returns_bond_torsion_with_specified_atoms',
'knotter_can_knot_empty_atomgroup',
'knotter_does_not_accept_null_initialisation',
'knotter_does_not_knot_atoms_unrelated_by_lengths',
'knotter_knots_four_atoms_with_torsion',
'knotter_knots_four_atoms_correctly_assigns_central_atoms',
'knotter_knots_four_atoms_correctly_assigns_terminal_atoms',
'knotter_knots_three_atoms_related_by_bondangles',
'knotter_knots_three_atoms_related_by_length',
'knotter_knots_three_atoms_without_torsions',
'knotter_knots_two_atoms_related_by_length',
'matrix_from_unit_cell_handles_obtuse',
'matrix_from_unit_cell_handles_planar',
'reflist_returns_resolution_for_chosen_unit_cell',
'reflist_returns_same_resolution_for_hexagonal_symops',
'reflist_returns_max_hkl',
'right_hand_matrix_has_positive_determinant',
'simplebasis_returns_angle_for_requested_torsion',
'simplebasis_absorbs_modified_angle_into_bond_torsion',
'simplebasis_returns_modified_angle_for_requested_torsion',
'superpose_returns_identity_for_one_compared_vector',
'superpose_returns_identity_for_zero_compared_vectors',
'transformed_grid_returns_resolution_for_hkl',
'transformed_grid_determines_reciprocal_limits',
'torsion_and_reversed_torsion_are_not_identical',
'torsion_basis_returns_positive_determinant',
'torsionbasis_is_set_to_requested_type_in_bondcalculator',
]

integration_tests = [
'alignment_tool_returns_good_match_for_aspartate',
'alignmenttool_aligns_rhombohedral_centre_to_positions',
'all_hexane_torsions_in_atom_contain_atom',
'atom_name_converts_to_upper_case',
'atom_number_cannot_be_negative',
'atomgroup_returns_N_and_C_terminus_anchors_for_glycine',
'atomgroup_returns_all_carbon_members_as_anchors_for_cyclohexane',
'atomgroup_returns_described_bond_angle',
'atomgroup_returns_terminals_as_anchors_for_hexane',
'atomgroup_search_for_atomname_is_not_case_sensitive',
'bondangle_added_also_increments_bondstraint',
'bondangle_measurement_matches_expectation_for_hs2',
'bondcalculator_acquires_consecutive_tickets',
'bondcalculator_calculates_single_samples_on_multiple_threads',
'bondcalculator_can_use_concerted_basis_to_refine',
'bondcalculator_correctly_deletes_contents',
'bondcalculator_creates_bondsequence_for_glycine',
'bondcalculator_finishes_multiple_threads_without_crashing',
'bondcalculator_produces_sane_vectors_from_n',
'bondcalculator_produces_sane_vectors_from_oxt',
'bondcalculator_reproduces_torsion_angles_for_aspartate',
'bondcalculator_reproduces_torsion_angles_for_cyclohexane',
'bondcalculator_reproduces_torsion_angles_for_glycine',
'bondcalculator_reproduces_torsion_angles_for_tyrosine',
'bondcalculator_returns_correct_cmo_geometry',
'bondcalculator_returns_correct_gly_geometry',
'bondcalculator_returns_correct_h2s_geometry',
'bondcalculator_returns_correct_nh3_geometry',
'bondcalculator_returns_correct_po4_geometry',
'bondsequence_adds_10_atomgraphs_for_glycine',
'bondsequence_adds_4_atomgraphs_for_glycine_max_two_bonds_from_oxt',
'bondsequence_adds_double_blocks_for_two_glycines',
'bondsequence_always_starts_with_ghost_anchor_atom',
'bondsequence_assigns_correct_bond_numbers_in_blocks',
'bondsequence_assigns_correct_bond_order_for_glycine',
'bondsequence_child_locations_match_parent_locations',
'bondsequence_completes_atomgraph_for_hexane',
'bondsequence_has_all_atomgraph_parents_filled_except_anchor',
'bondsequence_multiplies_atomblocks_by_samples_requested',
'bondsequence_parent_locations_match_child_locations',
'bondsequence_returns_atomic_composition_of_glycine',
'bondsequence_ignores_side_branches_longer_than_max_depth',
'bondsequence_maxdepth_always_greater_than_depth',
'bondsequencehandler_allocates_total_samples_over_all_threads',
'bondtorsion_does_not_accept_null_initialisation',
'bondtorsion_does_not_add_atom_outside_atomgroup',
'bondtorsion_returns_measurement_for_glycine_n_ca_c_o',
'chirality_is_assigned_for_aspartate_ca_atom',
'chirality_is_assigned_for_l_aspartate_ca_atom',
'chirality_sign_for_aspartate_is_obtainable',
'cif2geometry_automatically_knots_ASP_when_asked',
'cif2geometry_loading_ASP_gets_torsion',
'geometrytable_angle_lookup_is_not_permutable',
'geometrytable_angle_lookup_is_reversible',
'geometrytable_length_lookup_is_code_sensitive',
'geometrytable_length_lookup_is_reversible',
'geometrytable_torsion_lookup_is_reversible',
'glycine_matches_torsion_angle_for_H_N_C_HA3',
'insert_four_atoms_correctly_uses_geometry',
'insert_three_atoms_handles_sum_over_360_degrees',
'insert_three_atoms_inverts_for_sum_over_360_degrees',
'knotter_loading_aspartate_has_no_warnings',
'knotter_provides_one_central_bond_angle_per_atom',
'knotter_provides_two_terminal_bond_angles_per_atom',
'knotter_returns_no_warnings_when_geometry_is_complete',
'knotter_returns_warning_when_geometry_is_incomplete',
'sequencehandler_calculates_threads_order_independent',
'superpose_creates_correct_transformation_to_superpose_vector_lists',
'superpose_does_not_flip_hand_when_asked',
'superpose_recreates_manual_shifts',
'superpose_translation_and_rotation_match_transformation',
'torsionbasis_returns_number_of_modifiable_bonds_in_glycine',
]

foreach entry : unit_tests
  t = executable(entry, entry + '.cpp', link_with : [vag], cpp_args : ['-std=c++11'], include_directories: '../../../')
  test(entry, t, suite: 'unit')
endforeach

foreach entry : integration_tests
  t = executable(entry, entry + '.cpp', link_with : [vag], cpp_args : ['-std=c++11'], include_directories: '../../../')
  test(entry, t, suite: 'integration')
endforeach
