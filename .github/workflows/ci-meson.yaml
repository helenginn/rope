name: Compile Linux

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build on ${{ matrix.os }} with Meson ${{ matrix.meson_version }} and Ninja ${{ matrix.ninja_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        meson_version: ["1.7.0"]
        ninja_version: ["1.10.2"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: rope
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install git cmake make build-essential gdb
          python3 -m pip install meson==${{ matrix.meson_version }} ninja==${{ matrix.ninja_version }}
          echo meson: $(which meson) $(meson --version)
          echo ninja: $(which ninja) $(ninja --version)
      - name: Install RoPE dependencies (pt 1)
        run: |
          sudo apt-get -y install libglm-dev libglew-dev libcurlpp-dev libsdl2-dev libsdl2-image-dev libfftw3-dev libboost-all-dev
      - name: Install RoPE dependencies (pt 2)
        run: |
          git clone https://www.github.com/project-gemmi/gemmi.git
          cd gemmi
          mkdir build && cd build
          cmake .. -G Ninja && cd ..
          sudo ninja -C ./build install
          cd ..
          git clone https://www.github.com/nlohmann/json.git
          cd json
          mkdir build && cd build
          cmake .. -DJSON_BuildTests=OFF
          sudo make install
          cd ../..
      - name: Debug ls
        run: |
          pwd
          ls -lrta
      - name: Configure build
        run: |
          meson setup ./build ./rope --buildtype=release --prefix=$(pwd)/install
      - name: Compile
        run: |
          ninja -C ./build install          
